#
# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
from time import time
start = time()
def pentagonal_numbers(num):
    return (num*(3*num-1))/2

bound = 2500
pent_list = bound*[0] #the n'th index is the n'th pentagonal number
pent_set = set()
i = 1
while i <= bound-1:
    pent_list[i] = int(pentagonal_numbers(i))
    pent_set.add(int(pentagonal_numbers(i)))
    i+=1
print(pent_list)
Pi,Pj = 0,0
min = 100000000
i = 2
while i < len(pent_list)-1:
    for j in range(1,i):
        if pent_list[i]-pent_list[j] in pent_set and pent_list[i]+pent_list[j] in pent_set:
            if pent_list[i]-pent_list[j] < min:
                min = pent_list[i]-pent_list[j]
                Pi,Pj = pent_list[i],pent_list[j]
                print(min,Pi,Pj,i,j)
    i+=1


print(min)























end = time()
print("TIME:", end-start)


